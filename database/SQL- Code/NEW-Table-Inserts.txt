
CREATE TABLE PartnerStatus (
    Partner_Status_ID CHAR(6) PRIMARY KEY,
    Status_Flag varchar(255) NOT NULL
);


CREATE TABLE Partner (
    Partner_ID CHAR(6) PRIMARY KEY,
    Bus_Name VARCHAR(255) NOT NULL,
    Address TEXT,
    Phone VARCHAR(255),
    Email VARCHAR(255) UNIQUE,
    Description TEXT,
    Partner_Status_ID CHAR(6),
    FOREIGN KEY (Partner_Status_ID) REFERENCES PartnerStatus(Partner_Status_ID)
);


CREATE TABLE MeetingMinutes (
    Meeting_Minutes_ID CHAR(6) PRIMARY KEY,
    Meeting_Notes TEXT,
    Date DATE NOT NULL,
    Partner_ID CHAR(6),
    FOREIGN KEY (Partner_ID) REFERENCES Partner(Partner_ID)
);


CREATE TABLE PersonalInfo (
    Info_ID CHAR(6) PRIMARY KEY,
    Primary_Contact VARCHAR(255),
    Secondary_Contact VARCHAR(255),
    User_Name VARCHAR(255) UNIQUE NOT NULL,
    Password VARCHAR(255) NOT NULL
);


CREATE TABLE UserType (
    User_Type_ID CHAR(6) PRIMARY KEY,
    User_Type VARCHAR(255) NOT NULL
);

CREATE TABLE UserStatus (
    User_Status_ID CHAR(6) PRIMARY KEY,
    Status_Flag varchar(255) NOT NULL
);


CREATE TABLE Users (
    User_ID CHAR(6) PRIMARY KEY,
    Name VARCHAR(255) NOT NULL,
    User_Type_ID CHAR(6),
    User_Status_ID CHAR(6),
    Info_ID CHAR(6),
    Partner_ID CHAR(6),
    FOREIGN KEY (User_Type_ID) REFERENCES UserType(User_Type_ID),
    FOREIGN KEY (User_Status_ID) REFERENCES UserStatus(User_Status_ID),
    FOREIGN KEY (Info_ID) REFERENCES PersonalInfo(Info_ID),
);

CREATE TABLE Role (
    Role_ID CHAR(6) PRIMARY KEY,
    Role VARCHAR(255) NOT NULL
);


CREATE TABLE UserRole (
    User_Role_ID CHAR(6) PRIMARY KEY,
    User_ID CHAR(6),
    Role_ID CHAR(6),
    FOREIGN KEY (User_ID) REFERENCES Users(User_ID),
    FOREIGN KEY (Role_ID) REFERENCES Role(Role_ID)
);

CREATE TABLE ProjectStatus (
    Project_Status_ID CHAR(6) PRIMARY KEY,
    Project_Status VARCHAR(255)
);

CREATE TABLE Project (
    Project_ID CHAR(6) PRIMARY KEY,
    Project_Name VARCHAR(255) NOT NULL,
    Description TEXT,
    Start_Date DATE NOT NULL,
    End_Date DATE,
    Due_Date DATE,
    Project_Lead_ID CHAR(6),
    Project_Status_ID CHAR(6),
    FOREIGN KEY (Project_Status_ID) REFERENCES ProjectStatus(Project_Status_ID)
);

CREATE TABLE AssignedProject (
    Assigned_Project_ID CHAR(6) PRIMARY KEY,
    User_ID CHAR(6),
    Project_ID CHAR(6),
    FOREIGN KEY (User_ID) REFERENCES Users(User_ID),
    FOREIGN KEY (Project_ID) REFERENCES Project(Project_ID)
);

CREATE TABLE Task (
    Task_ID CHAR(6) PRIMARY KEY,
    Task_Name VARCHAR(255) NOT NULL,
    Description TEXT,
    StartDate Date,
    DueDate Date,
    EndDate Date,
    Completed binary,
    Project_ID CHAR(6),
    FOREIGN KEY (Project_ID) REFERENCES Project(Project_ID)
);


CREATE TABLE ChildTask (
    Child_Task_ID CHAR(6) PRIMARY KEY,
    Task_Name VARCHAR(255) NOT NULL,
    Description TEXT,
    StartDate Date,
    DueDate Date,
    EndDate Date,
    Completed binary,
    Task_ID CHAR(6),
    FOREIGN KEY (Task_ID) REFERENCES Task(Task_ID)
);

CREATE TABLE AssignedTask (
    Assigned_Task_ID CHAR(6) PRIMARY KEY,
    User_ID CHAR(6),
    Task_ID CHAR(6),
    FOREIGN KEY (User_ID) REFERENCES Users(User_ID),
    FOREIGN KEY (Task_ID) REFERENCES Task(Task_ID)
);


CREATE TABLE Messages (
    Message_ID CHAR(6) PRIMARY KEY,
    Subject VARCHAR(255),
    Content TEXT,
    Date DATE NOT NULL,
    Sender_ID CHAR(6),
    Receiver_ID CHAR(6),
    FOREIGN KEY (Sender_ID) REFERENCES Users(User_ID),
    FOREIGN KEY (Receiver_ID) REFERENCES Users(User_ID)
);

CREATE TABLE GrantStatus (
    Status_ID CHAR(6) PRIMARY KEY,
    Grant_Status VARCHAR(255)
);

CREATE TABLE GrantCategory (
    Category_ID CHAR(6) PRIMARY KEY,
    Category_Name VARCHAR(255)
);


CREATE TABLE Grants (
    Grant_ID CHAR(6) PRIMARY KEY,
    Grant_Name VARCHAR(255),
    Amount DECIMAL(10, 2),
    Submission_Date DATE,
    Award_Date DATE,
    Due_Date DATE,
    Status_ID CHAR(6),
    Category_ID CHAR(6),
    Project_ID CHAR(6),
    FOREIGN KEY (Status_ID) REFERENCES GrantStatus(Status_ID),
    FOREIGN KEY (Category_ID) REFERENCES GrantCategory(Category_ID),
    FOREIGN KEY (Project_ID) REFERENCES Project(Project_ID)
);

CREATE TABLE ProjectNotes (
    Notes_ID CHAR(6) PRIMARY KEY,
    Project_Notes TEXT,
    Date DATE NOT NULL,
    Project_ID CHAR(6),
    FOREIGN KEY (Project_ID) REFERENCES Project(Project_ID)
);

-- Default_Inserts

INSERT INTO GrantStatus VALUES('123456','Pending');
INSERT INTO GrantStatus VALUES('123455','Accepted');
INSERT INTO GrantStatus VALUES('123454','Rejected');

INSERT INTO GrantCategory VALUES('123456','Federal');
INSERT INTO GrantCategory VALUES('123455','State');

INSERT INTO UserType VALUES('123456','Admin');
INSERT INTO UserType VALUES('123454','Project-Manager');
INSERT INTO UserType VALUES('123453','PI');
INSERT INTO UserType VALUES('123452','Co-PI');
INSERT INTO UserType VALUES('123451','Researcher');
INSERT INTO UserType VALUES('123455','Faculty');
INSERT INTO UserType VALUES('123450','Senior-Researcher');
INSERT INTO UserType VALUES('123449','Client-Liaison');

INSERT INTO UserStatus VALUES('123456','Active');
INSERT INTO UserStatus VALUES('123455','Inactive');

INSERT INTO PartnerStatus VALUES ('123456','Prospect');
INSERT INTO PartnerStatus VALUES ('123455','Initial Contact');
INSERT INTO PartnerStatus VALUES ('123454','In Negotiation');
INSERT INTO PartnerStatus VALUES ('123453','Memo-Signed');
INSERT INTO PartnerStatus VALUES ('123452','Active Partner');

INSERT INTO ProjectStatus VALUES('123456','Ongoing');
INSERT INTO ProjectStatus VALUES('123455','Completed - Failed');
INSERT INTO ProjectStatus VALUES('123454','Completed - Success');

INSERT INTO Role VALUES('123456','Admin');
INSERT INTO Role VALUES('123455','Internal Employee');
INSERT INTO Role VALUES('123454','External Employee');

INSERT INTO Partner VALUES('123456','JMU CARE','800 South Main Street, Harrisonburg, VA 22807','800-800-8000','Contact@example.com','JMU CARE - Our Organization','123452');

INSERT INTO PersonalInfo VALUES ('123455','Contact@test.com','Contact2@test.com','Admin','Password');
INSERT INTO Users VALUES ('123456','Noah','123456','123456','123455','123456');
INSERT INTO UserRole VALUES ('123456','123456','123456');


